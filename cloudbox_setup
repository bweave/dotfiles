#!/usr/bin/bash

RED="\033[0;31m"
GREEN="\033[0;32m"
BLUE="\033[0;34m"
ENDCOLOR="\033[0m"

function msg() {
  echo -e "$1"
}

function info() {
  msg "$BLUE$1$ENDCOLOR"
}

function success() {
  msg "${GREEN}$1${ENDCOLOR}"
}

function error() {
  msg "${RED}$1${ENDCOLOR}"
}

success "Cloudbox setup - Let's go!"

sudo apt update
sudo apt dist-upgrade -y

# Install some packages
sudo apt install -y \
  autoconf \
  autojump \
  automake \
  bat \
  cmake \
  curl \
  doxygen \
  exuberant-ctags \
  g++ \
  gettext \
  hub \
  libtool \
  libtool-bin \
  luarocks \
  ninja-build \
  pkg-config \
  python3-pip \
  ripgrep \
  silversearcher-ag \
  stow \
  unzip \
  zsh-autosuggestions

if ! command -v gh &> /dev/null; then
  info "Installing Github CLI..."
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && sudo apt update \
    && sudo apt install gh -y
fi
success "Github CLI is g2g"

if ! command -v rustc &> /dev/null; then
  info "Installing rust for editor tooling..."
  curl https://sh.rustup.rs -sSf | sh -s -- -y
fi
success "rustc is g2g"

if ! command -v rb &> /dev/null; then
  info "Installing rb for string manipulation with Ruby..."
  curl https://raw.githubusercontent.com/thisredone/rb/master/rb -o /usr/local/bin/rb && chmod +x /usr/local/bin/rb
fi
success "rb is g2g"

if ! command -v zsh &> /dev/null; then
  info "Installing ZSH..."
  sudo apt install -y zsh
fi
success "ZSH is good to go"

if [ ! "$SHELL" = "$(which zsh)" ]; then
  info "Setting shell to ZSH..."
  sudo chsh "$(whoami)" -s "$(which zsh)"
fi
success "ZSH is already set as shell"

if ! command -v starship &> /dev/null; then
  sudo snap install starship
fi
success "starship prompt is g2g"

mkdir -p "$HOME/.config"
if [ ! -d "$HOME/dotfiles" ]; then
  info "Cloning dotfiles..."
  git clone https://github.com/bweave/dotfiles.git "$HOME/dotfiles"
fi
success "dotfiles cloned"

# TODO: this is not how we're gonna do it
# for config in base16-shell-hooks bin_scripts eslint git irb nvim ssh starship tmux wezterm zsh; do
#   info "Symlinking $config..."
#   stow --dotfiles -d "$HOME/dotfiles" -t "$HOME" --restow "$config" # --restow forces it
# done
# success "configs are g2g"

if [ ! -d "$HOME/.config/base16-shell" ]; then
  info "Cloning base16-shell..."
  git clone https://github.com/chriskempson/base16-shell.git "$HOME/.config/base16-shell"
fi
if [ -n "$BASE16_THEME" ]; then
  info "Setting base16_decaf theme..."
  source "$HOME/.config/base16-shell/scripts/base16-decaf.sh"
fi
success "base16-shell is g2g"

if [ "$(tmux -V | rb -l "split[1].to_f < 3.2")" = "true" ]; then
  info "Installing latest Tmux..."
  if command -v tmux &> /dev/null; then
    sudo mv "$(which tmux)" "$(which tmux)_orig"
  fi
  sudo apt install -y libevent-dev
  cd || echo "Couldn't cd to ~" && exit
  curl -s https://api.github.com/repos/tmux/tmux/releases/latest \
    | grep "browser_download_url.*" \
    | cut -d : -f 2,3 \
    | tr -d \" \
    | wget -qi -
  tar -zxf tmux-*.tar.gz
  cd tmux-*/ || echo "Couldn't navigate to tmux-*" && exit
    ./configure --prefix=/usr/local
    make && sudo make install
  cd || echo "Couldn't cd to ~" && exit
  rm -rf tmux-*
fi
success "Tmux is g2g"

if ! command -v lua-language-server &> /dev/null; then
  info "Installing lua-language-server..."
  sudo mkdir -p /usr/local/lua-language-server
  sudo chown ubuntu:ubuntu /usr/local/lua-language-server
  cd /usr/local/lua-language-server || exit
  latest=$(curl -sL https://api.github.com/repos/sumneko/lua-language-server/releases/latest | jq -r ".tag_name")
  curl -Lk "https://github.com/sumneko/lua-language-server/releases/download/$latest/lua-language-server-$latest-linux-x64.tar.gz" | tar xzv
  cat <<EOF > /usr/local/bin/lua-language-server
#!/bin/bash

exec "/usr/local/lua-language-server/bin/lua-language-server" "\$@"
EOF
  sudo chmod +x /usr/local/bin/lua-language-server
fi
success "lua-language-server is g2g"

# manually install fzf to get the most up to date version
if [ ! -d "$HOME/.fzf" ]; then
  info "Cloning FZF..."
  git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME/.fzf"
fi

if ! [ -x "$(command -v fzf)" ]; then
  info "Install FZF..."
  "$HOME/.fzf/install" --no-update-rc --key-bindings --completion
  source "$HOME/.zshrc"
fi
success "FZF is g2g"

if ! command -v nvim &> /dev/null; then
  info "Installing neovim"
  "$HOME/dotfiles/install-neovim-nightly.sh"
fi
success "neovim is g2g"

info "Installing Neovim plugins"
nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'

# Install additional editor tooling
sudo npm install -g npm@latest
if ! command -v tsc &> /dev/null; then
  info "Installing typescript..."
  sudo npm i -g typescript
fi
success "typescript is g2g"

# Setup forwarding GITHUB_TOKEN env var over ssh
if [ -z ${GITHUB_TOKEN+x} ]; then
  info "GITHUB_TOKEN is not setup. Adding it to ssh config"
  sudo sed --in-place=.orig 's/^AcceptEnv LANG LC_\*$/& GITHUB_TOKEN/' /etc/ssh/sshd_config
  info Reloading SSH
  sudo service ssh reload
fi
success "GITHUB_TOKEN is g2g"

echo
success =================================================
success "Donezo!"
success =================================================
echo
